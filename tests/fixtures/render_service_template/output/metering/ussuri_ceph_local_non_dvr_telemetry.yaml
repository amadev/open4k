spec:
  releases:
  - name: openstack-ceilometer
    chart: osh/ceilometer
    values:
      images:
        tags:
          test: test:latest
          dep_check: dep-check:latest
          db_init: db-init:latest
          db_drop: db-drop:latest
          ks_user: ks-user:latest
          ks_service: ks-service:latest
          ks_endpoints: ks-endpoints:latest
          ceilometer_db_sync: ceilometer-db-sync:latest
          rabbit_init: rabbit-init:latest
          ceilometer_api: ceilometer-api:latest
          ceilometer_central: ceilometer-central:latest
          ceilometer_collector: ceilometer-collector:latest
          ceilometer_compute: ceilometer-compute:latest
          ceilometer_ipmi: ceilometer-ipmi:latest
          ceilometer_notification: ceilometer-notification:latest
          image_repo_sync: image-repo-sync:latest
      conf:
        event_pipeline:
          sinks:
            - name: event_sink
              publishers:
                - panko://
              transformers: null
          sources:
            - events:
                - '*'
              name: event_source
              sinks:
                - event_sink
        gnocchi_resources:
          archive_policy_default: ceilometer-low
          archive_policies:
            - name: ceilometer-low
              aggregation_methods:
                - mean
              back_window: 0
              definition:
                - granularity: 1 minutes
                  timespan: 30 min
            - name: ceilometer-low-rate
              aggregation_methods:
                - mean
                - rate:mean
              back_window: 0
              definition:
                - granularity: 1 minutes
                  timespan: 30 min
            - name: ceilometer-high-static
              aggregation_methods:
                - mean
              back_window: 0
              definition:
                - granularity: 1 hour
                  timespan: 1 day
            - name: ceilometer-high-static-rate
              aggregation_methods:
                - mean
                - rate:mean
              back_window: 0
              definition:
                - granularity: 1 hour
                  timespan: 1 day
          resources:
            - metrics:
                - identity.authenticate.success
                - identity.authenticate.pending
                - identity.authenticate.failure
                - identity.user.created
                - identity.user.deleted
                - identity.user.updated
                - identity.group.created
                - identity.group.deleted
                - identity.group.updated
                - identity.role.created
                - identity.role.deleted
                - identity.role.updated
                - identity.project.created
                - identity.project.deleted
                - identity.project.updated
                - identity.trust.created
                - identity.trust.deleted
                - identity.role_assignment.created
                - identity.role_assignment.deleted
              resource_type: identity
            - metrics:
                - radosgw.objects
                - radosgw.objects.size
                - radosgw.objects.containers
                - radosgw.api.request
                - radosgw.containers.objects
                - radosgw.containers.objects.size
              resource_type: ceph_account
            - attributes:
                launched_at: resource_metadata.launched_at
                created_at: resource_metadata.created_at
                deleted_at: resource_metadata.deleted_at
                display_name: resource_metadata.display_name
                flavor_id: resource_metadata.(instance_flavor_id|(flavor.id)|flavor_id)
                flavor_name: resource_metadata.(instance_type|(flavor.name)|flavor_name)
                server_group: resource_metadata.user_metadata.server_group
                host: resource_metadata.(instance_host|host)
                image_ref: resource_metadata.image_ref
                server_group: resource_metadata.user_metadata.server_group
              event_associated_resources:
                instance_disk: '{"=": {"instance_id": "%s"}}'
                instance_network_interface: '{"=": {"instance_id": "%s"}}'
              event_attributes:
                id: instance_id
                display_name: display_name
                host: host
                availability_zone: availability_zone
                flavor_id: instance_type_id
                flavor_name: instance_type
                user_id: user_id
                project_id: project_id
              event_delete: compute.instance.delete.start
              event_create: compute.instance.create.end
              metrics:
                memory:
                  archive_policy_name: ceilometer-high-static-rate
                memory.usage:
                  archive_policy_name: ceilometer-low
                memory.resident:
                  archive_policy_name: ceilometer-low
                memory.swap.in:
                  archive_policy_name: ceilometer-low
                memory.swap.out:
                  archive_policy_name: ceilometer-low
                memory.bandwidth.total:
                  archive_policy_name: ceilometer-low
                memory.bandwidth.local:
                  archive_policy_name: ceilometer-low
                vcpus:
                  archive_policy_name: ceilometer-high-static-rate
                cpu:
                  archive_policy_name: ceilometer-low-rate
                cpu_l3_cache:
                  archive_policy_name: ceilometer-low
                disk.root.size:
                  archive_policy_name: ceilometer-high-static-rate
                disk.ephemeral.size:
                  archive_policy_name: ceilometer-high-static-rate
                disk.latency:
                  archive_policy_name: ceilometer-low
                disk.iops:
                  archive_policy_name: ceilometer-low
                disk.capacity:
                  archive_policy_name: ceilometer-low
                disk.allocation:
                  archive_policy_name: ceilometer-low
                disk.usage:
                  archive_policy_name: ceilometer-low
                compute.instance.booting.time:
                  archive_policy_name: ceilometer-high-static-rate
                perf.cpu.cycles:
                  archive_policy_name: ceilometer-low
                perf.instructions:
                  archive_policy_name: ceilometer-low
                perf.cache.references:
                  archive_policy_name: ceilometer-low
                perf.cache.misses:
                  archive_policy_name: ceilometer-low
                disk.root.size:
                  archive_policy_name: ceilometer-high-static-rate
                disk.ephemeral.size:
                  archive_policy_name: ceilometer-high-static-rate
              resource_type: instance
            - attributes:
                instance_id: resource_metadata.instance_id
                name: resource_metadata.vnic_name
              metrics:
                - network.outgoing.packets.rate
                - network.incoming.packets.rate
                - network.outgoing.packets
                - network.outgoing.packets.drop
                - network.incoming.packets.drop
                - network.outgoing.packets.error
                - network.incoming.packets.error
                - network.outgoing.bytes.rate
                - network.incoming.bytes.rate
                - network.outgoing.bytes
                - network.incoming.bytes
              resource_type: instance_network_interface
            - attributes:
                instance_id: resource_metadata.instance_id
                name: resource_metadata.disk_name
              metrics:
                - disk.device.read.requests
                - disk.device.read.requests.rate
                - disk.device.write.requests
                - disk.device.write.requests.rate
                - disk.device.read.bytes
                - disk.device.read.bytes.rate
                - disk.device.write.bytes
                - disk.device.write.bytes.rate
                - disk.device.latency
                - disk.device.iops
                - disk.device.capacity
                - disk.device.allocation
                - disk.device.usage
              resource_type: instance_disk
            - attributes:
                container_format: resource_metadata.container_format
                disk_format: resource_metadata.disk_format
                name: resource_metadata.name
              event_attributes:
                id: resource_id
              event_delete: image.delete
              metrics:
                - image.size
                - image.download
                - image.serve
              resource_type: image
            - metrics:
                - hardware.ipmi.node.power
                - hardware.ipmi.node.temperature
                - hardware.ipmi.node.inlet_temperature
                - hardware.ipmi.node.outlet_temperature
                - hardware.ipmi.node.fan
                - hardware.ipmi.node.current
                - hardware.ipmi.node.voltage
                - hardware.ipmi.node.airflow
                - hardware.ipmi.node.cups
                - hardware.ipmi.node.cpu_util
                - hardware.ipmi.node.mem_util
                - hardware.ipmi.node.io_util
              resource_type: ipmi
            - event_delete: floatingip.delete.end
              event_attributes:
                id: resource_id
              metrics:
                - bandwidth
                - network
                - network.create
                - network.update
                - subnet
                - subnet.create
                - subnet.update
                - port
                - port.create
                - port.update
                - router
                - router.create
                - router.update
                - ip.floating
                - ip.floating.create
                - ip.floating.update
              resource_type: network
            - metrics:
                - stack.create
                - stack.update
                - stack.delete
                - stack.resume
                - stack.suspend
              resource_type: stack
            - metrics:
                - storage.objects.incoming.bytes
                - storage.objects.outgoing.bytes
                - storage.api.request
                - storage.objects.size
                - storage.objects
                - storage.objects.containers
                - storage.containers.objects
                - storage.containers.objects.size
              resource_type: swift_account
            - attributes:
                display_name: resource_metadata.display_name
                volume_type: resource_metadata.volume_type
              event_delete: volume.delete.start
              event_attributes:
                id: resource_id
              metrics:
                - volume
                - volume.size
                - snapshot.size
                - volume.snapshot.size
                - volume.backup.size
              resource_type: volume
            - attributes:
                host_name: resource_metadata.resource_url
              metrics:
                - hardware.cpu.load.1min
                - hardware.cpu.load.5min
                - hardware.cpu.load.15min
                - hardware.cpu.util
                - hardware.cpu.user
                - hardware.cpu.nice
                - hardware.cpu.system
                - hardware.cpu.idle
                - hardware.cpu.wait
                - hardware.cpu.kernel
                - hardware.cpu.interrupt
                - hardware.memory.total
                - hardware.memory.used
                - hardware.memory.swap.total
                - hardware.memory.swap.avail
                - hardware.memory.buffer
                - hardware.memory.cached
                - hardware.network.ip.outgoing.datagrams
                - hardware.network.ip.incoming.datagrams
                - hardware.system_stats.cpu.idle
                - hardware.system_stats.io.outgoing.blocks
                - hardware.system_stats.io.incoming.blocks
              resource_type: host
            - attributes:
                device_name: resource_metadata.device
                host_name: resource_metadata.resource_url
              metrics:
                - hardware.disk.size.total
                - hardware.disk.size.used
                - hardware.disk.read.bytes
                - hardware.disk.write.bytes
                - hardware.disk.read.requests
                - hardware.disk.write.requests
              resource_type: host_disk
            - attributes:
                device_name: resource_metadata.name
                host_name: resource_metadata.resource_url
              metrics:
                - hardware.network.incoming.bytes
                - hardware.network.outgoing.bytes
                - hardware.network.outgoing.errors
              resource_type: host_network_interface
        meters:
          metric:
            - name: "image.size"
              event_type:
                - "image.upload"
                - "image.delete"
                - "image.update"
              type: "gauge"
              unit: B
              volume: $.payload.size
              resource_id: $.payload.id
              project_id: $.payload.owner
            - name: "image.download"
              event_type: "image.send"
              type: "delta"
              unit: "B"
              volume: $.payload.bytes_sent
              resource_id: $.payload.image_id
              user_id: $.payload.receiver_user_id
              project_id: $.payload.receiver_tenant_id
            - name: "image.serve"
              event_type: "image.send"
              type: "delta"
              unit: "B"
              volume: $.payload.bytes_sent
              resource_id: $.payload.image_id
              project_id: $.payload.owner_id
            - name: 'volume.size'
              event_type:
                - 'volume.exists'
                - 'volume.create.*'
                - 'volume.delete.*'
                - 'volume.resize.*'
                - 'volume.attach.*'
                - 'volume.detach.*'
                - 'volume.update.*'
              type: 'gauge'
              unit: 'GB'
              volume: $.payload.size
              user_id: $.payload.user_id
              project_id: $.payload.tenant_id
              resource_id: $.payload.volume_id
              metadata:
                display_name: $.payload.display_name
                volume_type: $.payload.volume_type
            - name: 'snapshot.size'
              event_type:
                - 'snapshot.exists'
                - 'snapshot.create.*'
                - 'snapshot.delete.*'
              type: 'gauge'
              unit: 'GB'
              volume: $.payload.volume_size
              user_id: $.payload.user_id
              project_id: $.payload.tenant_id
              resource_id: $.payload.snapshot_id
              metadata:
                display_name: $.payload.display_name
            - name: 'backup.size'
              event_type:
                - 'backup.exists'
                - 'backup.create.*'
                - 'backup.delete.*'
                - 'backup.restore.*'
              type: 'gauge'
              unit: 'GB'
              volume: $.payload.size
              user_id: $.payload.user_id
              project_id: $.payload.tenant_id
              resource_id: $.payload.backup_id
              metadata:
                display_name: $.payload.display_name
            - name: $.payload.metrics.[*].name
              event_type: 'magnum.bay.metrics.*'
              type: 'gauge'
              unit: $.payload.metrics.[*].unit
              volume: $.payload.metrics.[*].value
              user_id: $.payload.user_id
              project_id: $.payload.project_id
              resource_id: $.payload.resource_id
              lookup: ['name', 'unit', 'volume']
            - name: $.payload.measurements.[*].metric.[*].name
              event_type: 'objectstore.http.request'
              type: 'delta'
              unit: $.payload.measurements.[*].metric.[*].unit
              volume: $.payload.measurements.[*].result
              resource_id: $.payload.target.id
              user_id: $.payload.initiator.id
              project_id: $.payload.initiator.project_id
              lookup: ['name', 'unit', 'volume']
            - name: 'memory'
              event_type: &instance_events compute.instance.(?!create.start).*
              type: 'gauge'
              unit: 'MB'
              volume: $.payload.memory_mb
              user_id: $.payload.user_id
              project_id: $.payload.tenant_id
              resource_id: $.payload.instance_id
              user_metadata: $.payload.metadata
              metadata: &instance_meta
                host: $.payload.host
                flavor_id: $.payload.instance_flavor_id
                flavor_name: $.payload.instance_type
                display_name: $.payload.display_name
                host: $.payload.host
            - name: 'vcpus'
              event_type: *instance_events
              type: 'gauge'
              unit: 'vcpu'
              volume: $.payload.vcpus
              user_id: $.payload.user_id
              project_id: $.payload.tenant_id
              resource_id: $.payload.instance_id
              user_metadata: $.payload.metadata
              metadata:
                <<: *instance_meta
            - name: 'compute.instance.booting.time'
              event_type: 'compute.instance.create.end'
              type: 'gauge'
              unit: 'sec'
              volume:
                fields: [$.payload.created_at, $.payload.launched_at]
                plugin: 'timedelta'
              project_id: $.payload.tenant_id
              resource_id: $.payload.instance_id
              user_metadata: $.payload.metadata
              metadata:
                <<: *instance_meta
            - name: 'disk.root.size'
              event_type: *instance_events
              type: 'gauge'
              unit: 'GB'
              volume: $.payload.root_gb
              user_id: $.payload.user_id
              project_id: $.payload.tenant_id
              resource_id: $.payload.instance_id
              user_metadata: $.payload.metadata
              metadata:
                <<: *instance_meta
            - name: 'disk.ephemeral.size'
              event_type: 'compute.instance.*'
              type: 'gauge'
              unit: 'GB'
              volume: $.payload.ephemeral_gb
              user_id: $.payload.user_id
              project_id: $.payload.tenant_id
              resource_id: $.payload.instance_id
              user_metadata: $.payload.metadata
              metadata:
                <<: *instance_meta
            - name: 'bandwidth'
              event_type: 'l3.meter'
              type: 'delta'
              unit: 'B'
              volume: $.payload.bytes
              project_id: $.payload.tenant_id
              resource_id: $.payload.label_id
            - name: 'compute.node.cpu.frequency'
              event_type: 'compute.metrics.update'
              type: 'gauge'
              unit: 'MHz'
              volume: $.payload.metrics[?(@.name='cpu.frequency')].value
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.frequency')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.frequency')].source
            - name: 'compute.node.cpu.user.time'
              event_type: 'compute.metrics.update'
              type: 'cumulative'
              unit: 'ns'
              volume: $.payload.metrics[?(@.name='cpu.user.time')].value
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.user.time')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.user.time')].source
            - name: 'compute.node.cpu.kernel.time'
              event_type: 'compute.metrics.update'
              type: 'cumulative'
              unit: 'ns'
              volume: $.payload.metrics[?(@.name='cpu.kernel.time')].value
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.kernel.time')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.kernel.time')].source
            - name: 'compute.node.cpu.idle.time'
              event_type: 'compute.metrics.update'
              type: 'cumulative'
              unit: 'ns'
              volume: $.payload.metrics[?(@.name='cpu.idle.time')].value
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.idle.time')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.idle.time')].source
            - name: 'compute.node.cpu.iowait.time'
              event_type: 'compute.metrics.update'
              type: 'cumulative'
              unit: 'ns'
              volume: $.payload.metrics[?(@.name='cpu.iowait.time')].value
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.iowait.time')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.iowait.time')].source
            - name: 'compute.node.cpu.kernel.percent'
              event_type: 'compute.metrics.update'
              type: 'gauge'
              unit: 'percent'
              volume: $.payload.metrics[?(@.name='cpu.kernel.percent')].value * 100
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.kernel.percent')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.kernel.percent')].source
            - name: 'compute.node.cpu.idle.percent'
              event_type: 'compute.metrics.update'
              type: 'gauge'
              unit: 'percent'
              volume: $.payload.metrics[?(@.name='cpu.idle.percent')].value * 100
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.idle.percent')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.idle.percent')].source
            - name: 'compute.node.cpu.user.percent'
              event_type: 'compute.metrics.update'
              type: 'gauge'
              unit: 'percent'
              volume: $.payload.metrics[?(@.name='cpu.user.percent')].value * 100
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.user.percent')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.user.percent')].source
            - name: 'compute.node.cpu.iowait.percent'
              event_type: 'compute.metrics.update'
              type: 'gauge'
              unit: 'percent'
              volume: $.payload.metrics[?(@.name='cpu.iowait.percent')].value * 100
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.iowait.percent')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.iowait.percent')].source
            - name: 'compute.node.cpu.percent'
              event_type: 'compute.metrics.update'
              type: 'gauge'
              unit: 'percent'
              volume: $.payload.metrics[?(@.name='cpu.percent')].value * 100
              resource_id: $.payload.host + "_" + $.payload.nodename
              timestamp: $.payload.metrics[?(@.name='cpu.percent')].timestamp
              metadata:
                event_type: $.event_type
                host: $.publisher_id
                source: $.payload.metrics[?(@.name='cpu.percent')].source
            - name: $.payload.outcome - $.payload.outcome + 'identity.authenticate.' + $.payload.outcome
              type: 'delta'
              unit: 'user'
              volume: 1
              event_type:
                - 'identity.authenticate'
              resource_id: $.payload.initiator.id
              user_id: $.payload.initiator.id
            - name: 'dns.domain.exists'
              event_type: 'dns.domain.exists'
              type: 'cumulative'
              unit: 's'
              volume:
                fields: [$.payload.audit_period_beginning, $.payload.audit_period_ending]
                plugin: 'timedelta'
              project_id: $.payload.tenant_id
              resource_id: $.payload.id
              user_id: $._context_user
              metadata:
                status: $.payload.status
                pool_id: $.payload.pool_id
                host: $.publisher_id
            - name: 'trove.instance.exists'
              event_type: 'trove.instance.exists'
              type: 'cumulative'
              unit: 's'
              volume:
                fields: [$.payload.audit_period_beginning, $.payload.audit_period_ending]
                plugin: 'timedelta'
              project_id: $.payload.tenant_id
              resource_id: $.payload.instance_id
              user_id: $.payload.user_id
              metadata:
                nova_instance_id: $.payload.nova_instance_id
                state: $.payload.state
                service_id: $.payload.service_id
                instance_type: $.payload.instance_type
                instance_type_id: $.payload.instance_type_id
        pipeline:
          sources:
            - name: meter_source
              meters:
                - "*"
              sinks:
                - meter_sink
            - name: hardware_source
              meters:
                - "hardware.*"
            #  resources:
            #    - snmp://10.10.0.10
            #  discovery:
            #    - 10.10.0.10
              sinks:
                - meter_sink
          sinks:
            - name: meter_sink
              transformers:
              publishers:
                - gnocchi://
        polling:
          sources:
            - name: ascale_pollsters
              interval: 60
              meters:
                - "cpu"
                - "disk*"
                - "memory*"
            - name: all_pollsters
              interval: 3600
              meters:
                - "*"
           # - name: hardware_pollster
           #   interval: 150
           #   meters:
           #     - "hardware.*"
           #   resources:
           #     - snmp://10.10.0.11
        ceilometer:
          DEFAULT:
            debug: false
            event_dispatchers:
              type: multistring
              values:
                - gnocchi
            meter_dispatchers:
              type: multistring
              values:
                - gnocchi
          coordination:
            backend_url: etcd3://etcd:2379
          api:
            aodh_is_enabled: "True"
          compute:
            instance_discovery_method: libvirt_metadata
          hardware:
            readonly_user_name: "public"
            meter_definitions_file: "snmp.yaml"
          keystone_authtoken:
            memcache_security_strategy: ENCRYPT
            memcache_secret_key: 3TftRxhU2IZ7maTD
          oslo_messaging_notifications:
            topics: notifications
          cache:
            backend: oslo_cache.memcache_pool
        logging:
          logger_ceilometer:
            level: INFO
            propagate: 0
      manifests:
        network_policy: false
        secret_ca_bundle: true
        ingress_api: false
        service_ingress_api: false
        secret_mongodb: false
        deployment_api: false
        deployment_collector: false
        job_db_init: false
        job_rabbit_init: false
        job_db_init_mongodb: false
        job_ks_endpoints: false
        job_ks_service: false
      endpoints:
        cluster_domain_suffix: cluster.local
        identity:
          auth:
            admin:
              region_name: RegionOne
              username: admin
              password: ZUqTyP2XwsgEGKZ7qNhhecYyq9NLkGE6
              project_name: admin
              user_domain_name: default
              project_domain_name: default
              default_domain_id: default
            ceilometer:
              username: ceilometerXhxs2HihzX
              password: Tnhbrnl6g31pzRaFdbxvyeMr1CSe7yDF
            test:
              username: testHl4x
              password: CTKDtRix0ZAAHJZCVuQ60hWe2MiUHxAg
        oslo_cache:
          statefulset:
            name: openstack-memcached-memcached
            replicas: 3
        oslo_db:
          auth:
            admin:
              username: root
              password: QACDSM6FBTH2LuXjTuRQ6DXhD8bSgPbn
            ceilometer:
              username: ceilometerxfkr4HZF3z
              password: U9KwPjPgK1txi5kMm9pvVdlJDvtUr1lM
        oslo_db_panko:
          auth:
            panko:
              username:   panko3sgfP
              password:   G9bGeEQSxdWpQDgV9bpNIidBpWvpZ8V4
        oslo_messaging:
          auth:
            admin:
              username: rabbitmq
              password: 2tnAuP0j9MsgaVHErehZkC5HCK3ZxYLr
            user:
              username: rabbitmq
              password: 2tnAuP0j9MsgaVHErehZkC5HCK3ZxYLr
            ceilometer:
              username: ceilometerdNwnaAFUJC
              password: VCBEs3bsRHNqXjDFRBEABAqqhsAgcK1E
          statefulset:
            replicas: 1
            name: openstack-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq
          path: /ceilometer
        oslo_messaging_notifications:
          auth:
            ceilometer:
              password: PYVPcRruzubVN2sguGarI6rbgFTb7FSd
              username: ceilometerxkaMcrLDm7
          host_fqdn_override: {}
          hosts:
            default: rabbitmq
          path: /openstack
          port:
            amqp:
              default: 5672
            http:
              default: 15672
          scheme: rabbit
          statefulset:
            name: openstack-rabbitmq-rabbitmq
            replicas: 1
        metering:
          host_fqdn_override:
            public:
              host: ceilometer.it.just.works
              tls:
                ca: |
                  TEST CA
                crt: |
                  TEST CRT
                key: |
                  TEST KEY
          hosts:
            admin:
              host: ceilometer-api
            default: ceilometer
            internal: ceilometer-api
            public:
              host: ceilometer
              tls:
                ca: |
                  TEST CA
                crt: |
                  TEST CRT
                key: |
                  TEST KEY
          port:
            api:
              admin: 8042
              default: 80
              internal: 8042
              public: 443
          scheme:
            default: http
            public: https
      jobs:
        ks_service:
          restartPolicy: Never
        ks_endpoints:
          restartPolicy: Never
        ks_user:
          restartPolicy: Never
