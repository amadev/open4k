#apiVersion: lcm.mirantis.com/v1alpha1
#kind: HelmBundle

{%- set service = 'gnocchi' %}
{%- set messaging = spec.get('features', {}).get('messaging', {}) %}
{%- set stacklight_enabled = spec.get('features', {}).get('stacklight', {}).get('enabled', False) %}
{%- set notification_topics = ['notifications'] %}
{%- do notification_topics.append('stacklight_notifications') if stacklight_enabled %}

spec:
  releases:
{%- if spec.get('migration', {}).get('telemetry', {}).get('deploy_main_service', True) %}
  - name: openstack-gnocchi
    chart: {{spec.common.infra.get('repo', spec.common.charts.repo)}}/gnocchi
    values:
      images:
        tags:
{%- for image in [
    "dep_check",
    "db_init_indexer",
    "db_init",
    "db_drop",
    "ks_user",
    "ks_service",
    "ks_endpoints",
    "gnocchi_db_sync",
    "gnocchi_storage_init",
    "gnocchi_api",
    "gnocchi_statsd",
    "gnocchi_metricd",
    "gnocchi_resources_cleaner",
    "image_repo_sync",] %}
        {%- if image in images %}
          {{ image }}: {{ images[image] }}
        {%- endif %}
{%- endfor %}
      conf:
        apache: |
          {%- raw %}
          {{- $portInt := tuple "metric" "internal" "api" $ | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
          Listen 0.0.0.0:{{ $portInt }}
          {%- endraw %}
          SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
          CustomLog /dev/stdout combined env=!forwarded
          CustomLog /dev/stdout proxy env=forwarded

          <VirtualHost *:{% raw %}{{ $portInt }}{% endraw %}>
              WSGIDaemonProcess gnocchi processes=8 threads=1 user=gnocchi group=gnocchi display-name=%{GROUP}
              WSGIProcessGroup gnocchi
              WSGIScriptAlias / "/var/lib/openstack/lib/python3.6/site-packages/gnocchi/rest/wsgi.py"
              WSGIApplicationGroup %{GLOBAL}

              ErrorLog /dev/stdout
              SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
              CustomLog /dev/stdout combined env=!forwarded
              CustomLog /dev/stdout proxy env=forwarded

              <Directory "/var/lib/openstack/lib/python3.6/site-packages/gnocchi/rest">
                    Require all granted
              </Directory>
          </VirtualHost>
        paste:
          composite:gnocchi+keystone:
            use: egg:Paste#urlmap
            /: gnocchiversions_pipeline
            /v1: gnocchiv1+keystone
            /healthcheck: healthcheck
          pipeline:gnocchiv1+keystone:
            pipeline: http_proxy_to_wsgi keystone_authtoken gnocchiv1
          filter:http_proxy_to_wsgi:
            use: egg:oslo.middleware#http_proxy_to_wsgi
            oslo_config_project: gnocchi
          pipeline:gnocchiversions_pipeline:
            pipeline: http_proxy_to_wsgi gnocchiversions
          app:gnocchiversions:
            paste.app_factory: gnocchi.rest.app:app_factory
            root: gnocchi.rest.api.VersionsController
          app:gnocchiv1:
            paste.app_factory: gnocchi.rest.app:app_factory
            root: gnocchi.rest.api.V1Controller
          app:healthcheck:
            use: egg:oslo.middleware#healthcheck
            oslo_config_project: gnocchi
        gnocchi:
          DEFAULT:
            debug: false
            coordination_url: etcd3://etcd:2379
          storage:
            driver: redis
            redis_url: redis://:{{ redis_secret }}@rfs-openstack-redis.{{ redis_namespace }}:26379?sentinel=mymaster&db=0
          keystone_authtoken:
            memcache_security_strategy: ENCRYPT
            memcache_secret_key: {{ credentials.memcached }}
          indexer:
            driver: mysql
        logging:
          logger_gnocchi:
            level: {{ spec.get('features', {}).get('logging', {}).get('gnocchi', {}).get('level', 'INFO') }}
            propagate: 0
      dependencies:
        static:
          db_init:
            jobs:
              - openstack-mariadb-cluster-wait
      manifests:
        network_policy: false
        job_rabbit_init: false
        secret_ca_bundle: true
        job_storage_init: false
        job_db_init_indexer: false
        job_db_init: true
        daemonset_statsd: false
        service_statsd: false
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_admin_identity.yaml' %}
{% include 'base/_cache.yaml' %}
        oslo_db_indexer:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            gnocchi:
              username: {{ credentials.database.user.username }}
              password: {{ credentials.database.user.password }}
          hosts:
            default: mariadb
          scheme: mysql+pymysql
          port:
            indexer_port:
              default: 3306
        oslo_db:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            gnocchi:
              username: {{ credentials.database.user.username }}
              password: {{ credentials.database.user.password }}
{% include 'base/_notifications.yaml' %}
        metric:
          host_fqdn_override:
            public:
              host: gnocchi.{{ spec.public_domain_name }}
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          hosts:
            admin:
              host: gnocchi-api
            default: gnocchi
            internal: gnocchi-api
            public:
              host: gnocchi
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          port:
            api:
              admin: 8041
              default: 80
              internal: 8041
              public: 443
          scheme:
            default: http
            public: https
      jobs:
{% include 'base/_ks_jobs.yaml' %}
{%- endif %}
