#apiVersion: lcm.mirantis.com/v1alpha1
#kind: HelmBundle

{%- set service = 'barbican' %}
{%- set components_with_dedicated_messaging = spec.get('features', {}).get('messaging', {}).get('components_with_dedicated_messaging', []) %}
{%- set stacklight_enabled = spec.get('features', {}).get('stacklight', {}).get('enabled', False) %}
{%- set notification_topics = ['notifications'] %}
{%- do notification_topics.append('stacklight_notifications') if stacklight_enabled %}

spec:
  releases:
{%- if 'key-manager' in components_with_dedicated_messaging %}
  - name: openstack-barbican-rabbitmq
    chart: {{spec.common.infra.repo}}/rabbitmq
    values:
{% include 'base/_rabbitmq_images.yaml' %}
  {%- if stacklight_enabled %}
      monitoring:
        prometheus:
          enabled: true
  {%- endif %}
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
        job_users_create: true
      volume:
        enabled: false
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_messaging_dedicated.yaml' %}
      conf:
        users:
          barbican:
            auth:
              service_user:
                username: {{ credentials.messaging.user.username }}
                password: {{ credentials.messaging.user.password }}
            path: /barbican
        aux_conf:
          policies:
          - vhost: barbican
            name: default-policy
            pattern: '^(?!amq\.).*'
            definition:
              message-ttl: 120000
          - vhost: barbican
            name: results_expire
            pattern: '^results\.'
            definition:
              expires: 3600000
            priority: 1
          - vhost: barbican
            name: tasks_expire
            pattern: '^tasks\.'
            definition:
              expires: 3600000
            priority: 1
  {%- if stacklight_enabled %}
        prometheus_exporter:
          rabbit_exporters: "overview,exchange,node"
  {%- endif %}
{%- endif %}
{%- if spec.get('migration', {}).get('barbican', {}).get('deploy_main_service', True) %}
  - name: openstack-barbican
    chart: {{spec.common.openstack.repo}}/barbican
    values:
      images:
        tags:
{%- for image in [
    "ks_service",
    "bootstrap",
    "db_drop",
    "barbican_db_sync",
    "image_repo_sync",
    "ks_endpoints",
    "rabbit_init",
    "db_init",
    "dep_check",
    "ks_user",
    "scripted_test",
    "barbican_api",] %}
        {%- if image in images %}
          {{ image }}: {{ images[image] }}
        {%- endif %}
{%- endfor %}
      dependencies:
        static:
          db_init:
            jobs:
              - openstack-mariadb-cluster-wait
      conf:
        barbican:
          keystone_authtoken:
            memcache_security_strategy: ENCRYPT
            memcache_secret_key: {{ credentials.memcached }}
          oslo_messaging_notifications:
            topics: {{ notification_topics|join(',') }}
          DEFAULT:
            sql_idle_timeout: 3600
            sql_max_retries: -1
            sql_retry_interval: 1
{%- if spec.get('features', {}).get('barbican', {}).get('backends', {}).get('vault', {}).get('enabled', False) %}
          secretstore:
            enable_multiple_secret_stores: True
            stores_lookup_suffix: software, vault
          secretstore:software:
            secret_store_plugin: store_crypto
            crypto_plugin: simple_crypto
          secretstore:vault:
            secret_store_plugin: vault_plugin
            global_default: True
          simple_crypto_plugin:
            kek: {{ credentials.kek }}
          vault_plugin:
            approle_role_id: {{ spec.features.barbican.backends.vault.approle_role_id }}
            approle_secret_id: {{ spec.features.barbican.backends.vault.approle_secret_id }}
            vault_url: {{ spec.features.barbican.backends.vault.vault_url }}
            use_ssl: {{ spec.features.barbican.backends.vault.use_ssl }}
    {%- if spec.features.barbican.backends.vault.ssl_ca_crt_file is defined %}
            ssl_ca_crt_file: {{ spec.features.barbican.backends.vault.ssl_ca_crt_file }}
    {%- endif %}
{%- else %}
          secretstore:
            enabled_secretstore_plugins: store_crypto
          crypto:
            enabled_crypto_plugins: simple_crypto
          simple_crypto_plugin:
            kek: {{ credentials.kek }}
{%- endif %}
        logging:
          logger_barbican:
            level: {{ spec.get('features', {}).get('logging', {}).get('barbican', {}).get('level', 'INFO') }}
            propagate: 0
        policy:
        {%- if spec.openstack_version not in ['queens', 'rocky'] %}
        # TODO(vsaienko): drop policy settings in upstream values.yaml to ensure in-code policy
        # defaults are used.
          secret_project_match: project_id:%(target.secret.project_id)s
          secret_creator_user: user_id:%(target.secret.creator_id)s
          container_project_match: project_id:%(target.container.project_id)s
          container_creator_user: user_id:%(target.container.creator_id)s
        {%- else %}
          secret_project_match: project:%(target.secret.project_id)s
          secret_creator_user: user:%(target.secret.creator_id)s
          container_project_match: project:%(target.container.project_id)s
          container_creator_user: user:%(target.container.creator_id)s
        {%- endif %}
      manifests:
        network_policy: false
        job_rabbit_init: false
        secret_ca_bundle: true
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_admin_identity.yaml' %}
{% include 'base/_cache.yaml' %}
        oslo_db:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            barbican:
              username: {{ credentials.database.user.username }}
              password: {{ credentials.database.user.password }}
{%- if 'key-manager' in components_with_dedicated_messaging %}
{% include 'base/_messaging_dedicated.yaml' %}
{%- else %}
{% include 'base/_messaging_shared.yaml' %}
{%- endif %}
{% include 'base/_notifications.yaml' %}
        key_manager:
          host_fqdn_override:
            public:
              host: barbican.{{ spec.public_domain_name }}
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          hosts:
            admin:
              host: barbican-api
            default: barbican
            internal: barbican-api
            public:
              host: barbican
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          port:
            api:
              admin: 9311
              default: 80
              internal: 9311
              public: 443
          scheme:
            default: http
            public: https
      jobs:
{% include 'base/_ks_jobs.yaml' %}
{%- endif %}
