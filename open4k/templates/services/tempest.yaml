#apiVersion: lcm.mirantis.com/v1alpha1
#kind: HelmBundle

{%- set service = 'tempest' %}

spec:
  releases:
  - name: openstack-tempest
    chart: {{spec.common.openstack.repo}}/tempest
    values:
      images:
        tags:
{%- for image in [
    "tempest_run_tests",
    "ks_user",
    "dep_check",
    "image_repo_sync",
    "bootstrap",
    "tempest-uuids-init",] %}
        {%- if image in images %}
          {{ image }}: {{ images[image] }}
        {%- endif %}
{%- endfor %}
      manifests:
        network_policy: false
        secret_ca_bundle: true
      pod:
        replicas:
          server: 1
      pvc:
        storage_class: {{ spec.get('persistent_volume_storage_class', 'mirablock-k8s-block-hdd') }}
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_admin_identity.yaml' %}
        dashboard:
          host_fqdn_override:
            public:
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          hosts:
            default: horizon-int
            public:
              host: horizon
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          port:
            web:
              default: 80
              public: 443
          scheme:
            default: http
            public: https
      bootstrap:
        enabled: true
        script: |
          openstack network show heat-net || openstack network create heat-net
          openstack subnet show heat-subnet || openstack subnet create heat-subnet \
            --dhcp --subnet-range 10.20.30.0/24 \
            --allocation-pool start=10.20.30.10,end=10.20.30.254 \
            --gateway 10.20.30.1 \
            --network heat-net
          openstack router show heat-router || openstack router create heat-router
          subnet_id=$(openstack subnet show heat-subnet -f value -c id)
          if openstack router show heat-router -f json -c interfaces_info |grep -qw ${subnet_id}; then
            echo "$subnet_id is in the list"
          else
            openstack router add subnet heat-router heat-subnet
            openstack router set --external-gateway {{ spec.features.neutron.get('floating_network', {}).get('name', 'public') }} heat-router
          fi
          openstack role create --or-show "key-manager:service-admin"
          openstack role create --or-show creator
{%- if spec.features.neutron.get('backend') != 'tungstenfabric' %}
          openstack subnet pool show default_pool || \
            openstack subnet pool create --share --default \
            --pool-prefix 10.20.40.0/24 --default-prefix-length 26 \
            default_pool
          openstack network auto allocated topology create --or-show
          openstack subnet pool set default_pool --default
{%- else %}
          openstack network show tempest-fixed-net || openstack network create tempest-fixed-net --share
          openstack subnet show tempest-subnet || openstack subnet create tempest-subnet \
            --dhcp --subnet-range 10.20.40.0/24 \
            --allocation-pool start=10.20.40.10,end=10.20.40.254 \
            --gateway 10.20.40.1 \
            --network tempest-fixed-net
{%- endif %}
      conf:
        tempest: {{ spec | generate_tempest_config(helmbundles_body) }}
