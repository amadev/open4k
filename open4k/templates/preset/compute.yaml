{%- set ironic_enabled = 'baremetal' in services %}
{%- set nginx_ingress_namespace_class = "openstack-ingress-nginx" %}
artifacts:
  images_base_url: mirantis.azurecr.io
  binary_base_url: https://binary.mirantis.com

common:
  charts:
    releases:
      namespace: {{ openstack_namespace }}
  openstack:
    values:
      network:
        api:
          ingress:
            classes:
              namespace: {{ nginx_ingress_namespace_class }}
features:
  services:
    - block-storage
    - compute
    - dns
    - identity
    - dashboard
    - image
    - ingress
    - database
    - memcached
    - networking
    - orchestration
    - messaging
    - load-balancer
{%- if openstack_version not in ['queens', 'rocky'] %}
    - placement
{%- endif %}
    - coordination
    - key-manager
    - redis
  glance:
    backend: ceph
  cinder:
    volume:
      backend: ceph
    backup:
      backend: ceph
  neutron:
    backend: ml2
  database:
    local_volumes:
      enabled: true
  ssl:
    public_endpoints:
      enabled: true
  stacklight:
    enabled: true
    user:
      username: stacklight
  octavia:
    lb_network:
      subnets:
        - range: '10.255.0.0/16'
          pool_start: '10.255.1.0'
          pool_end: '10.255.255.254'
services:
  ingress:
    ingress:
      values:
        deployment:
          # NOTE(vsaienko): deploy in cluster mode to allow handle ingress'es
          # from TF namespace
          mode: "cluster"
          cluster:
            class: {{ nginx_ingress_namespace_class }}
  database:
    mariadb:
      values:
        conf:
          database_conf:
            mysqld:
              wsrep_provider_options:
                gcache.size: 1024M
  dashboard:
    horizon:
      values:
        network:
          dashboard:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
  networking:
    neutron:
      values:
        network:
          server:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
  orchestration:
    heat:
      values:
        network:
          cfn:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          cloudwatch:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
  compute:
    nova:
      values:
        conf:
          nova:
            filter_scheduler:
              enabled_filters:
              - AvailabilityZoneFilter
              - ComputeFilter
              - ComputeCapabilitiesFilter
              - ImagePropertiesFilter
              - ServerGroupAntiAffinityFilter
              - ServerGroupAffinityFilter
              - NUMATopologyFilter
            libvirt:
              live_migration_use_ip_to_scp_configdrive: true
        network:
          api:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          metadata:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          osapi:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          placement:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          novncproxy:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
        bootstrap:
          structured:
            flavors:
              options:
                m1.extra_tiny_test:
                  disk: 5
                  name: m1.extra_tiny_test
                  ram: 256
                  vcpus: 1
                m1.tiny_test:
                  disk: 5
                  name: m1.tiny_test
                  ram: 512
                  vcpus: 1
  metric:
    gnocchi:
      values:
        network:
          api:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
  tempest:
    tempest:
      values:
        conf:
          # NOTE(vsaienko): disable cleanup explicitly to avoid production data loss.
          # DANGER: do not enable this on production environment.
          cleanup:
            enabled: False
          convert_to_uuid:
            network:
              public_network_id: public
            compute:
              image_ref: Cirros-5.1
              image_ref_alt: Cirros-5.1
            {%- if ironic_enabled %}
              # TODO(vsaienko): change name to more generic
              flavor_ref:  baremetal-ram1024-cpus2-disk10
              flavor_ref_alt: baremetal-ram1024-cpus2-disk10
            {%- else %}
              flavor_ref:  m1.extra_tiny_test
              flavor_ref_alt: m1.tiny_test
            {%- endif %}
          blacklist:
            - (?:tempest\.fake\.test)
            # Skip neutron tempest plugin tests that are already contains in tempest
            - (?:neutron_tempest_plugin.api.admin.test_agent_management)
            - (?:neutron_tempest_plugin.api.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_add_remove_network_from_dhcp_agent)
            - (?:neutron_tempest_plugin.api.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_list_dhcp_agent_hosting_network)
            - (?:neutron_tempest_plugin.api.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_list_networks_hosted_by_one_dhcp)
            - (?:neutron_tempest_plugin.api.admin.test_quotas.QuotasTest.test_quotas)
            - (?:neutron_tempest_plugin.api.admin.test_routers_dvr)
            - (?:neutron_tempest_plugin.api.test_dhcp_ipv6)
            - (?:neutron_tempest_plugin.api.test_metering_extensions)
            - (?:neutron_tempest_plugin.api.test_networks.NetworksTestJSON.test_show_network)
            - (?:neutron_tempest_plugin.api.test_security_groups.SecGroupTest.test_create_list_update_show_delete_security_group)
            - (?:neutron_tempest_plugin.api.test_service_type_management.ServiceTypeManagementTest.test_service_provider_list)
            - (?:neutron_tempest_plugin.api.test_flavors_extensions.TestFlavorsIpV6TestJSON.test_list_service_profiles)
            - (?:neutron_tempest_plugin.api.test_flavors_extensions.TestFlavorsJson.test_list_service_profiles)
            - (?:neutron_tempest_plugin.api.test_flavors_extensions.TestFlavorsIpV6TestJSON.test_show_service_profile)
            - (?:neutron_tempest_plugin.api.test_flavors_extensions.TestFlavorsJson.test_show_service_profile)
            - (?:neutron_tempest_plugin.api.test_routers)
            - (?:neutron_tempest_plugin.api.test_allowed_address_pair.AllowedAddressPairIpV6TestJSON)
            - (?:neutron_tempest_plugin.api.test_allowed_address_pair.AllowedAddressPairTestJSON)
            - (?:neutron_tempest_plugin.api.test_extra_dhcp_options.ExtraDHCPOptionsIpV6TestJSON)
            - (?:neutron_tempest_plugin.api.test_extra_dhcp_options.ExtraDHCPOptionsTestJSON)
            # test_ipv6_vip_mixed_ipv4_ipv6_members_traffic test is added to the list because the test requires IPv4 IPv6 dual stack mode in
            # Kubernetes but the modes is supported from 1.16 version of Kubernetes. The test will be removed from the list once Kubernetes server
            # will be at or later than version v1.16. The bug is described more comprehensively in PRODX-2330
            - (?:octavia_tempest_plugin.tests.scenario.v2.test_ipv6_traffic_ops.IPv6TrafficOperationsScenarioTest)
            # These tests require four pre-created compute availability zones in a cluster
            - (?:octavia_tempest_plugin.tests.api.v2.test_availability_zone)
            - (?:octavia_tempest_plugin.tests.api.v2.test_availability_zone_profile)
            # Skip SoftwareConfigIntegrationTest because it requires a custom image
            # https://github.com/openstack/heat/blob/stable/train/heat_integrationtests/prepare_test_env.sh
            - (?:heat_tempest_plugin.tests.scenario.test_server_software_config.SoftwareConfigIntegrationTest)
            # Skip patrole tempest plugin tests until PRODX-5954 will be resolved
            - (?:patrole_tempest_plugin)
          {%- if ironic_enabled %}
            # Skip schedule to all nodes, as in case of concurrent tests, this will highly likely to fail
            - (?:tempest.scenario.test_server_multinode.TestServerMultinode.test_schedule_to_all_nodes)
            # Skip ironic boot from volume
            - (?:ironic_tempest_plugin.tests.scenario.test_baremetal_boot_from_volume.BaremetalBFV.test_baremetal_boot_from_volume)
          {%- endif %}
            # AccountQuotas tests are skipped due to this is an known issue.
            - (?:tempest.api.object_storage.test_account_quotas.AccountQuotasTest.test_upload_valid_object)
            - (?:tempest.api.object_storage.test_account_quotas.AccountQuotasTest.test_admin_modify_quota)
          script: |
            tempest run --config-file /etc/tempest/tempest.conf -w 4 --smoke --blacklist-file  /etc/tempest/test-blacklist
          tempest:
          {%- if ironic_enabled and not ironic_mt_enabled %}
            auth:
              create_isolated_networks: false
          {%- endif %}
            heat_plugin:
              image_ref: Fedora-27-1.6
              instance_type: m1.tiny_test
              minimal_image_ref: Cirros-5.1
              minimal_instance_type: m1.extra_tiny_test
            identity:
              ca_certificates_file: /certs/ca-bundle.pem
            volume:
              build_timeout: 600
            #TODO(mshalamov): Will be removed during process of completing PRODX-1192
            compute:
            {%- if ironic_enabled and not ironic_mt_enabled %}
              fixed_network_name: ironic-provisioning
            {%- endif %}
              min_compute_nodes: 2
              build_timeout: 600
            #TODO(mshalamov): Will be removed during process of completing PRODX-1192
            compute-feature-enabled:
            {%- if ironic_enabled %}
              attach_encrypted_volume: false
              block_migration_for_live_migration: false
              change_password: false
              console_output: false
              interface_attach: false
              live_migrate_back_and_forth: false
              live_migration: false
              pause: false
              personality: false
              rescue: false
              resize: false
              shelve: false
              snapshot: false
              suspend: false
              boot_from_volume: false
            {%- else %}
              cold_migration: true
              resize: true
            {%- endif %}
            image:
              build_timeout: 600
            load_balancer:
              lb_build_timeout: 1500
            validation:
              image_ssh_password: gocubsgo
              image_ssh_user: cirros
            {%- if ironic_enabled %}
              ssh_timeout: 420
              connect_timeout: 90
            {%- endif %}
            network:
            {%- if ironic_enabled and not ironic_mt_enabled %}
              shared_physical_network: true
            {%- else %}
              shared_physical_network: false
            {%- endif %}
              floating_network_name: public
            volume-feature-enabled:
              api_v1: false
              api_v2: false
              api_v3: true
              cluster_active_active: true
            telemetry:
              disable_ssl_certificate_validation: true
            image-feature-enabled:
              enabled_import_methods: 'web-download,glance-direct,copy-image'
          tempest_logging:
              handler_file:
                args: ('/var/lib/tempest/data/tempest.log',)
                class: FileHandler
                formatter: tests
                level: DEBUG
              handler_stdout:
                level: WARN
              handlers:
                keys: file,stdout
              logger_root:
                handlers: stdout,file
                level: DEBUG
              logger_tempest:
                handlers: stdout,file
                level: DEBUG

        manifests:
          job_bootstrap: true
