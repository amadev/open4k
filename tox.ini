[tox]
minversion = 2.0
skipdist = True
envlist = pep8,py37
# Automatic envs (pyXX) will only use the python version appropriate to that
# env and ignore basepython inherited from [testenv] if we set
# ignore_basepython_conflict.
ignore_basepython_conflict = True

[testenv]
basepython = python3.7
usedevelop = True
install_command = {toxinidir}/tox_install.sh {opts} {packages}
deps =
    .[test]
commands =
    pytest tests {posargs:-vv}

[testenv:coverage]
commands =
    pytest --cov=open4k tests {posargs}

[testenv:pep8]
# using black for code style, so ignore pycodestyle violations from flake8
commands =
    flake8 open4k tests
    black --check --diff open4k tests

[testenv:black]
envdir={toxworkdir}/pep8
# actually format code with black
# run flake8 just in case afterwards
commands =
    black open4k tests
    flake8 open4k tests

[testenv:docs]
envdir = {toxworkdir}/docs
deps =
    -r{toxinidir}/docs/requirements.txt
commands = sphinx-build -b html -W docs/source docs/build/html

[testenv:releasenotes]
envdir = {toxworkdir}/docs
deps=
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/docs/requirements.txt
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:dev]
deps =
    .
passenv =
    HOME
    KOPF_*
    KUBECONFIG
    PYTHONASYNCIODEBUG
    OSCTL_*
whitelist_externals =
    find
    bash
    kubectl
commands =
    # TODO(vsaienko): run in the same way as in production.
    find {toxinidir}/open4k -type f -name '*.pyc' -delete
    bash {toxinidir}/tools/run_with_service_account.sh

[flake8]
extend-ignore = E,W
